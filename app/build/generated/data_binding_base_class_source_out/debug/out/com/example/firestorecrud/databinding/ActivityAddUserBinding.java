// Generated by view binder compiler. Do not edit!
package com.example.firestorecrud.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.firestorecrud.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddUserBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton addUser;

  @NonNull
  public final TextInputEditText bioET;

  @NonNull
  public final TextInputLayout bioLayout;

  @NonNull
  public final TextInputEditText firstNameET;

  @NonNull
  public final TextInputLayout firstNameLayout;

  @NonNull
  public final TextInputEditText lastNameET;

  @NonNull
  public final TextInputLayout lastNameLayout;

  @NonNull
  public final LinearLayout nameLayout;

  @NonNull
  public final TextInputEditText phoneET;

  @NonNull
  public final TextInputLayout phoneLayout;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityAddUserBinding(@NonNull RelativeLayout rootView, @NonNull MaterialButton addUser,
      @NonNull TextInputEditText bioET, @NonNull TextInputLayout bioLayout,
      @NonNull TextInputEditText firstNameET, @NonNull TextInputLayout firstNameLayout,
      @NonNull TextInputEditText lastNameET, @NonNull TextInputLayout lastNameLayout,
      @NonNull LinearLayout nameLayout, @NonNull TextInputEditText phoneET,
      @NonNull TextInputLayout phoneLayout, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.addUser = addUser;
    this.bioET = bioET;
    this.bioLayout = bioLayout;
    this.firstNameET = firstNameET;
    this.firstNameLayout = firstNameLayout;
    this.lastNameET = lastNameET;
    this.lastNameLayout = lastNameLayout;
    this.nameLayout = nameLayout;
    this.phoneET = phoneET;
    this.phoneLayout = phoneLayout;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addUser;
      MaterialButton addUser = ViewBindings.findChildViewById(rootView, id);
      if (addUser == null) {
        break missingId;
      }

      id = R.id.bioET;
      TextInputEditText bioET = ViewBindings.findChildViewById(rootView, id);
      if (bioET == null) {
        break missingId;
      }

      id = R.id.bioLayout;
      TextInputLayout bioLayout = ViewBindings.findChildViewById(rootView, id);
      if (bioLayout == null) {
        break missingId;
      }

      id = R.id.firstNameET;
      TextInputEditText firstNameET = ViewBindings.findChildViewById(rootView, id);
      if (firstNameET == null) {
        break missingId;
      }

      id = R.id.firstNameLayout;
      TextInputLayout firstNameLayout = ViewBindings.findChildViewById(rootView, id);
      if (firstNameLayout == null) {
        break missingId;
      }

      id = R.id.lastNameET;
      TextInputEditText lastNameET = ViewBindings.findChildViewById(rootView, id);
      if (lastNameET == null) {
        break missingId;
      }

      id = R.id.lastNameLayout;
      TextInputLayout lastNameLayout = ViewBindings.findChildViewById(rootView, id);
      if (lastNameLayout == null) {
        break missingId;
      }

      id = R.id.nameLayout;
      LinearLayout nameLayout = ViewBindings.findChildViewById(rootView, id);
      if (nameLayout == null) {
        break missingId;
      }

      id = R.id.phoneET;
      TextInputEditText phoneET = ViewBindings.findChildViewById(rootView, id);
      if (phoneET == null) {
        break missingId;
      }

      id = R.id.phoneLayout;
      TextInputLayout phoneLayout = ViewBindings.findChildViewById(rootView, id);
      if (phoneLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddUserBinding((RelativeLayout) rootView, addUser, bioET, bioLayout,
          firstNameET, firstNameLayout, lastNameET, lastNameLayout, nameLayout, phoneET,
          phoneLayout, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
